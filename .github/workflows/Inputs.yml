name: Reusable deploy workflow
on:
  workflow_dispatch:
    inputs:
      build_id:
        required: true
        type: string
      deploy_target:
        required: true
        type: choice
        options:
          - Debug
          - Release        
      perform_deploy:
        required: true
        type: boolean
jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ inputs.perform_deploy }}
    steps:
      - name: Deploy build to target
        run: echo "Deploying build:${{ inputs.build_id }} to target:${{ inputs.deploy_target }}"
         
      - name: Set the value
        id: step_one
        run: |
         echo "action_state=yellow" >> "$GITHUB_ENV"
      - name: Use the value
        id: step_two
        run: |
         printf '%s\n' "$action_state" # This will output 'yellow'

      - name: Set color
        id: color-selector
        run: echo "SELECTED_COLOR=green" >> "$GITHUB_OUTPUT"
      - name: Get color
        env:
          SELECTED_COLOR: ${{ steps.color-selector.outputs.SELECTED_COLOR }}
        run: echo "The selected color is $SELECTED_COLOR"

         echo "Vamos volando! :rocket:" >> $GITHUB_STEP_SUMMARY


  generate-a-secret-output:
    runs-on: ubuntu-latest
    steps:
      - id: sets-a-secret
        name: Generate, mask, and output a secret
        run: |
          the_secret=$((RANDOM))
          echo "::add-mask::$the_secret"
          echo "secret-number=$the_secret" >> "$GITHUB_OUTPUT"
      - name: Use that secret output (protected by a mask)
        run: |
          echo "the secret number is ${{ steps.sets-a-secret.outputs.secret-number }}"

          echo "Vamos volando! :rocket:" >> $GITHUB_STEP_SUMMARY 
